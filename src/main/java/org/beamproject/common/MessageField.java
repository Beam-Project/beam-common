/*
 * Copyright (C) 2013, 2014 beamproject.org
 *
 * This file is part of beam-common.
 *
 * beam-common is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * beam-common is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.beamproject.common;

import java.security.PublicKey;

/**
 * Defines all typically used field identifier used in {@link Message}s.
 * <p>
 * Identifier for nested structures are grouped by a common prefix. For example,
 * all identifier that are used in the content field {@code CNT}, are named like
 * {@code CNT_<identifier>}.
 * <br />
 * The identifier <b>values</b> itself do not have any prefixes, i.e. an
 * identifier, say {@code CNT_MSG} (for the filed {@code CNT} and in that the
 * field {@code MSG}), returns the value {@code MSG}.
 *
 * @see Message
 */
public enum MessageField {

    /**
     * Stands for "Version". This field contains the message format version.
     */
    VRS,
    /**
     * Stands for "Participant" and is the pubilc key (X.509 encoded) of the
     * target {@link Participant} of this message.
     */
    PRT,
    /**
     * Stands for "ContentField" and contains the message as several sub fields.
     */
    CNT;

    /**
     * These fields are for the content block, {@code CNT}, of a
     * {@link Message}.
     */
    public enum ContentField {

        /**
         * This field is a part of the Challenge-Response protocol. This
         * protocol allows to establish a long-time session.
         * <p>
         * {@code CRPHASE} stands for "Challenge Response Phase" and informs the
         * recipient of the message about the current phase in the protocol.
         */
        CRPHASE,
        /**
         * This field is a part of the Challenge-Response protocol. This
         * protocol allows to establish a long-time session.
         * <p>
         * {@code CRPUBKEY} stands for "Challenge Response Public Key" and
         * contains the senders {@link PublicKey} as byte array.
         */
        CRPUBKEY,
        /**
         * This field is a part of the Challenge-Response protocol. This
         * protocol allows to establish a long-time session.
         * <p>
         * {@code CRNONCE} stands for "Challenge Response Nonce" and a nonce,
         * generated by the sender.
         */
        CRNONCE,
        /**
         * This field is a part of the Challenge-Response protocol. This
         * protocol allows to establish a long-time session.
         * <p>
         * {@code CRSIG} stands for "Challenge Response Signature" and contains
         * the signature, created with the other sides private key.
         */
        CRSIG,
        /**
         * This field is a part of the Challenge-Response protocol. This
         * protocol allows to establish a long-time session.
         * <p>
         * {@code CRKEY} stands for "Challenge Response Key" and contains the
         * session key that was established earlier.
         */
        CRKEY,
        /**
         * Stands for "Message" and contains the message text itself.
         */
        MSG;

    }
}
